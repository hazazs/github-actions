name: bdqv-core-be-acr
run-name: "#${{ github.run_number }}"
on:
  workflow_dispatch:
    inputs:
      SKIP_INTEGRATION_TESTS:
        type: boolean
        default: 'false'
        description: >
          SKIP_INTEGRATION_TESTS |
          Warning: Enabling this might cause deployment of hidden errors. Use this only with testing purposes.
      DRY_RUN:
        type: boolean
        default: 'false'
        description: DRY RUN | Enabling this will do only the tests along with the Sonar analysis without any deployment.
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false
jobs:
  bdqv-core-be-acr:
    runs-on: ubuntu-20.04
    env:
      artifactName: bdqv-core-be
      namespace: bdqvnext-dev
      sonarUrl: https://bdqvnext.bmwgroup.net/bdqvnext/sonar/
      registry: acrbdqvnextint.azurecr.io
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Prepare Agent
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'zulu'
          # maven-version is 3.8.8
      - name: Adjust version info
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
      - name: Compile Sources
        run: mvn clean package -DskipTests=true -P bmw --batch-mode
      - name: Execute Unit Tests
        run: mvn test -P bmw --batch-mode
      - name: Execute Integration Tests
        run: mvn verify -Dsurefire.skip=true -P bmw --batch-mode
        if: ${{ github.event.inputs.SKIP_INTEGRATION_TESTS != 'true' }}
      - name: Print SHORT_SHA
        run: echo ${{ env.SHORT_SHA }}
      #- name: Docker Login to ACR
        #uses: azure/docker-login@v1
        #with:
          #login-server: ${{ env.registry }}
          #username: ${{ secrets.ACR_USERNAME }}
          #password: ${{ secrets.ACR_PASSWORD }}
      - name: Build Docker Image and Push to ACR
        uses: docker/build-push-action@v4
        with:
          context: ./docker
          push: false
          tags: ${{ env.registry }}/${{ env.namespace }}/${{ env.artifactName }}:${{ env.SHORT_SHA }}
          build-args: ${{ github.event.inputs.NO_CACHE == 'true' && '--no-cache' || '' }}
